services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
      - minio
      - meilisearch
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/postgres"
      # internal endpoint for the backend to talk to MinIO
      S3_ENDPOINT_URL: "http://minio:9000"
      # public endpoint (what the browser will use). keep as localhost if you expose MinIO to host.
      S3_PUBLIC_ENDPOINT_URL: "http://localhost:9000"
      S3_ACCESS_KEY: "minioadmin"
      S3_SECRET_KEY: "minioadmin"
      S3_BUCKET: "digital-library"
      SECRET_KEY: "change-me"
      MEILISEARCH_HOST: "http://meilisearch:7700"
    command: ["bash","-c","echo Waiting for database...; until pg_isready -h db -p 5432 -U postgres -q; do echo waiting for db; sleep 1; done; echo DB ready; exec uvicorn app.main:app --host 0.0.0.0 --port 8000"]
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h localhost || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9000/minio/health/live || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  createbucket:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        sleep 2;
        mc alias set myminio http://minio:9000 minioadmin minioadmin;
        mc mb myminio/digital-library || true;
        exit 0;
      "
    restart: "no"

  meilisearch:
    image: getmeili/meilisearch:v1.7
    container_name: meilisearch
    environment:
      MEILI_NO_ANALYTICS: "true"
    ports:
      - "7700:7700"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:7700/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
  minio_data:
